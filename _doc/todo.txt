TODO:
    - core features
        - simulator
            - project
                - structure of classes
                - how to join measures with step expressions to create one object to represent step
                  in QubitLab Simulator (read qclib documentation)
            - build circuit
            - run simulation
            - get final state
            - get given step state
        - informer
        - diagram
        - parser
            - "import <filename>" command
            - doc comments '##'

    - new features
        - generate LaTeX diagrams
        - loops
        - auto swap-gates
        - new objects (gates, math elements, etc)
        - ...

    - refactoring
        - move help methods to separate class from actions
        - reduce number of parameters in functions
            - pack parameters into dict or object
            - remove parameters from constructors and create set-methods
        - don't use parameters that will be modify in methods
        - separate question-methods and function-methods
        - separate try-catch block to individual method (no code before and after try-catch block;
          inside try-block only one method)
        - instead of long switch (or if-else) block use polymorphism and object factor design pattern
        - change name from attribution to assignment
        - split assignment and expression (in future will be more expressions)
        - using grammar in parser (for example https://pyparsing.wikispaces.com/)
